# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches:
      - '**'        # matches every branch
  pull_request:
    branches:
      - '**'        # matches every branch

#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]


jobs:
  test_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip uninstall brainpy -y
          python setup.py install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd brainpy
          pytest _src/


#  test_linux_py37:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.7"]
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v5
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install flake8 pytest
#        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
#        pip install jax==0.3.25
#        pip install jaxlib==0.3.25
#        pip uninstall brainpy -y
#        python setup.py install
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        cd examples
#        pytest ../brainpy/
#

  test_macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        pip uninstall brainpy -y
        python setup.py install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd brainpy
        pytest _src/

#  test_macos_py37:
#    runs-on: macos-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: [ "3.7" ]
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install flake8 pytest
#          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
#          pip install jax==0.3.25
#          pip install jaxlib==0.3.25
#          pip uninstall brainpy -y
#          python setup.py install
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Test with pytest
#        run: |
#          cd examples
#          pytest ../brainpy/
#


#  test_windows:
#    runs-on: windows-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.9", "3.10", "3.11"]
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v5
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install flake8 pytest
#        python -m pip install -r requirements-dev.txt
#        pip uninstall brainpy -y
#        python setup.py install
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        cd brainpy
#        pytest _src/


#  test_windows_py37:
#    runs-on: windows-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.7"]
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v5
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install flake8 pytest
#        python -m pip install numpy>=1.21.0
#        python -m pip install "jaxlib==0.3.25" -f https://whls.blob.core.windows.net/unstable/index.html --use-deprecated legacy-resolver
#        python -m pip install https://github.com/google/jax/archive/refs/tags/jax-v0.3.25.tar.gz
#        python -m pip install -r requirements-dev.txt
#        python -m pip install tqdm brainpylib
#        pip uninstall brainpy -y
#        python setup.py install
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 brainpy/ --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 brainpy/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        cd examples
#        pytest ../brainpy/
